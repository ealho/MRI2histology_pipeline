function D = delsq3D(G, varargin)
%DELSQ3D  Construct 7-point finite difference Laplacian.
%   delsq3D(G) or delsq3D(G,[hx,hy,hz]);
%   is the sparse form of the three-dimensional,
%   7-point discrete negative Laplacian on the grid G.
%   The grid G can be generated by NUMGRID or NESTED.
%   [hx,hy,hz] is the optional parameter for the voxel size. 
%   delsq(G) assumes hx = 1, hy = 1 and hz = 1.
%   The implementation assumes Dirichlet boundary conditions. 
%   Please provide a single connected component...
%   This code is a modification of the original delsq.m code from Matlab. 
%   Please see the copyright information for the original code in delsq.m

%   Modified by Ender Konukoglu, 07/12/2010. 
%   ender.konukoglu@gmail.com

[m,n,r] = size(G);
if nargin == 2
    hx = varargin{1}(1);
    hy = varargin{1}(2);
    hz = varargin{1}(3);
else
    hx = 1;
    hy = 1;
    hz = 1;
end;
% Indices of interior points
p = find(G);

% Connect interior points to themselves with 8's.
i = G(p);
j = G(p);
s = 2*ones(size(p))/hx^2 + 2*ones(size(p))/hy^2 + 2*ones(size(p))/hz^2;

% for k = north, east, south, west
for k = [-1 1]
   % Possible neighbors in k-th direction
   Q = G(p+k);
   % Index of points with interior neighbors
   q = find(Q);
   % Connect interior points to neighbors with -1's.
   i = [i; G(p(q))];
   j = [j; Q(q)];
   s = [s; -ones(length(q),1)/hx^2];
end
for k = [m -m]
   % Possible neighbors in k-th direction
   Q = G(p+k);
   % Index of points with interior neighbors
   q = find(Q);
   % Connect interior points to neighbors with -1's.
   i = [i; G(p(q))];
   j = [j; Q(q)];
   s = [s; -ones(length(q),1)/hy^2];
end
for k = [m*n -m*n]
   % Possible neighbors in k-th direction
   Q = G(p+k);
   % Index of points with interior neighbors
   q = find(Q);
   % Connect interior points to neighbors with -1's.
   i = [i; G(p(q))];
   j = [j; Q(q)];
   s = [s; -ones(length(q),1)/hz^2];
end
D = sparse(i,j,s);
